import discord
from discord import app_commands
import json
import datetime
import asyncio


#Entrada do bot sincronizando com o servidor
id_do_servidor = COLOQUE_SEU_ID_AQUI
class client(discord.Client):
    def __init__(self):
        super().__init__(intents=discord.Intents.default())
        self.sinced = False
    async def on_ready(self):
        await self.wait_until_ready()
        if not self.sinced:
            await tree.sync(guild=discord.Object(id=id_do_servidor))
            self.sinced = True
        print(f"Entramos como {self.user}.")
aclient = client()
tree = app_commands.CommandTree(aclient)

@tree.command(guild=discord.Object(id=id_do_servidor), name='giovanna', description='informativo')
async def slash1(interaction: discord.Interaction):
    await interaction.response.send_message(f"Ol√°! Estou aqui para lhe explicar como adicionar a data do seu aniversario no banco de dados dos aniversariantes. \n \n Para isto, voc√™ deve escrever o comando: **/data**. \n Logo em seguida digitar a data e o m√™s do seu anivers√°rio, assim: **DD-MM**. \n Caso queira atualizar a sua data de aniversario, escreva o comando: **/update**. \n \n Apos enviar esta seguencia de comandos sua data j√° estara adiconada!", ephemeral=False)

# Comando para adicionar anivers√°rio
@tree.command(guild=discord.Object(id=id_do_servidor),name='data', description='dd-mm')
async def add_birthday(interaction, member: discord.Member, date: str):
    try:
        birthday_date = datetime.datetime.strptime(date, "%d-%m")
    except ValueError:
        await interaction.response.send_message("Formato de data inv√°lido. Use DD-MM (ex: 01-01).")
        return
    birthdays = load_birthdays()
    birthdays[str(member.id)] = date
    save_birthdays(birthdays)
    await interaction.response.send_message(f"Anivers√°rio de {member.display_name} adicionado!")

filename = "birthdays.json" 

#Comando de atualiza√ß√£o de data
@tree.command(guild=discord.Object(id=id_do_servidor), name='update', description='Atualiza sua data de anivers√°rio')
async def update_birthday(interaction, member: discord.Member, date: str):
      member_id = str(interaction.user.id)
      birthdays = load_birthdays()
      # Atualiza a data de anivers√°rio do membro
      birthdays[member_id] = date
      save_birthdays(birthdays)
      await interaction.response.send_message(f"Sua data de anivers√°rio foi atualizada para {date}.", ephemeral=True)

# Carregar anivers√°rios do arquivo JSON
def load_birthdays():
    try:
        with open(filename, "r") as file:
            return json.load(file)
    except FileNotFoundError:
        return {}

# Salvar anivers√°rios no arquivo JSON
def save_birthdays(birthdays):
    with open(filename, "w") as file:
        json.dump(birthdays, file)

# Verificar anivers√°rios diariamente
@aclient.event
async def check_birthdays():
    await aclient.wait_until_ready()
    channel = aclient.get_channel(channel_id)  # Coloque o ID do canal #geral aqui
    while not aclient.is_closed():
        birthdays = load_birthdays()
        now = datetime.datetime.now().strftime("%d-%m")
        for member_id, birthday_date in birthdays.items():
            if birthday_date == now:
                member = aclient.get_user(int(member_id))
                await channel.send(f"üéâ Feliz anivers√°rio, {member.mention}! üéâ")
        await asyncio.sleep(86400)  # Espera 24 horas

# Inicializa√ß√£o do bot
aclient.run("COLOQUE_SEU_TOKEN_AQUI")
